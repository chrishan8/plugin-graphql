(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{330:function(t,e,a){"use strict";a.r(e);var s=a(33),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"adapters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adapters"}},[t._v("#")]),t._v(" Adapters")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#basics"}},[t._v("Basics")])]),a("li",[a("a",{attrs:{href:"#methods"}},[t._v("Methods")])]),a("li",[a("a",{attrs:{href:"#argumentmode"}},[t._v("ArgumentMode")]),a("ul",[a("li",[a("a",{attrs:{href:"#type"}},[t._v("TYPE")])]),a("li",[a("a",{attrs:{href:"#list"}},[t._v("LIST")])])])])])]),a("p"),t._v(" "),a("p",[t._v("There is not single true way to design a GraphQL schema and thus there are\nsome small differences between the implementations, however this plugin has to automatically\ngenerate GraphQL queries, has to parse the schema and de-/serialize the data. Thus we needed a way\nto customize how this plugin should behave and communicate with the API. For this we implemented an\nadapter pattern, which allows you to setup your own adapter and customize it.")]),t._v(" "),a("h2",{attrs:{id:"basics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basics"}},[t._v("#")]),t._v(" Basics")]),t._v(" "),a("p",[t._v("Every adapter has to implement the "),a("code",[t._v("Adapter")]),t._v(" interface (when your're working with TypeScript).\nHowever it's easier to just inherit from the DefaultAdapter:")]),t._v(" "),a("p",[a("code",[t._v("data/custom-adapter.js")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" DefaultAdapter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ConnectionMode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@vuex-orm/plugin-graphql'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomAdapter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultAdapter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Your code here")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Example")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConnectionMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ConnectionMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PLAIN")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Then register this adapter when setting up the plugin:")]),t._v(" "),a("p",[a("code",[t._v("data/store.js")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" CustomAdapter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./custom-adapter.ts'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\nVuexORM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VuexORMGraphQL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  database"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  adapter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomAdapter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("That's it. In the next sections you can read what and how you can customize the adapter.")]),t._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),a("p",[t._v("Each Adapter has to implement a bunch of methods. Here is the list of the currently supported\nmethod signatures and their value in the default adapter:")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("getRootQueryName(): string;")])]),t._v(" "),a("ul",[a("li",[t._v("Returns the name of the type all query types inherit.")]),t._v(" "),a("li",[t._v("Default adapter value: "),a("code",[t._v("Query")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("getRootMutationName(): string;")])]),t._v(" "),a("ul",[a("li",[t._v("Returns the name of the type all mutation types inherit.")]),t._v(" "),a("li",[t._v("Default adapter value: "),a("code",[t._v("Mutation")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("getNameForPersist(model: Model): string;")])]),t._v(" "),a("ul",[a("li",[t._v("Returns the mutation name for persisting (creating) a record.")]),t._v(" "),a("li",[t._v("Default adapter value example: "),a("code",[t._v("createPost")])]),t._v(" "),a("li",[a("code",[t._v("model")]),t._v(" is a instance of "),a("a",{attrs:{href:"https://github.com/vuex-orm/plugin-graphql/blob/master/src/orm/model.ts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Model"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("getNameForPush(model: Model): string;")])]),t._v(" "),a("ul",[a("li",[t._v("Returns the mutation name for pushing (updating) a record.")]),t._v(" "),a("li",[t._v("Default adapter value example: "),a("code",[t._v("updatePost")])]),t._v(" "),a("li",[a("code",[t._v("model")]),t._v(" is a instance of "),a("a",{attrs:{href:"https://github.com/vuex-orm/plugin-graphql/blob/master/src/orm/model.ts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Model"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("getNameForDestroy(model: Model): string;")])]),t._v(" "),a("ul",[a("li",[t._v("Returns the mutation name for destroying a record.")]),t._v(" "),a("li",[t._v("Default adapter value example: "),a("code",[t._v("deletePost")])]),t._v(" "),a("li",[a("code",[t._v("model")]),t._v(" is a instance of "),a("a",{attrs:{href:"https://github.com/vuex-orm/plugin-graphql/blob/master/src/orm/model.ts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Model"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("getNameForFetch(model: Model, plural: boolean): string;")])]),t._v(" "),a("ul",[a("li",[t._v("Returns the query field for fetching a record.")]),t._v(" "),a("li",[t._v("Default adapter value example: "),a("code",[t._v("posts")]),t._v(" or "),a("code",[t._v("post")])]),t._v(" "),a("li",[a("code",[t._v("model")]),t._v(" is a instance of "),a("a",{attrs:{href:"https://github.com/vuex-orm/plugin-graphql/blob/master/src/orm/model.ts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Model"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("code",[t._v("plural")]),t._v(" tells if one or multiple records (connection) are fetched.")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("getConnectionMode(): ConnectionMode;")])]),t._v(" "),a("ul",[a("li",[t._v("Returns the "),a("RouterLink",{attrs:{to:"/guide/connection-mode.html"}},[t._v("ConnectionMode")]),t._v(".")],1),t._v(" "),a("li",[t._v("Default adapter value: "),a("code",[t._v("AUTO")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("getArgumentMode(): ArgumentMode;")])]),t._v(" "),a("ul",[a("li",[t._v("Returns the ArgumentMode for filtering and inputs (push, persist).")]),t._v(" "),a("li",[t._v("Default adapter value: "),a("code",[t._v("TYPE")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("getFilterTypeName(model: Model): string;")])]),t._v(" "),a("ul",[a("li",[t._v("Returns the name of the filter type for a model.")]),t._v(" "),a("li",[a("code",[t._v("model")]),t._v(" is a instance of "),a("a",{attrs:{href:"https://github.com/vuex-orm/plugin-graphql/blob/master/src/orm/model.ts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Model"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("Default adapter value example: "),a("code",[t._v("PostFilter")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("getInputTypeName(model: Model, action?: string): string;")])]),t._v(" "),a("ul",[a("li",[t._v("Returns the name of the input type for a model.")]),t._v(" "),a("li",[a("code",[t._v("model")]),t._v(" is a instance of "),a("a",{attrs:{href:"https://github.com/vuex-orm/plugin-graphql/blob/master/src/orm/model.ts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Model"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("Default adapter value example: "),a("code",[t._v("PostInput")])])])])]),t._v(" "),a("h2",{attrs:{id:"argumentmode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#argumentmode"}},[t._v("#")]),t._v(" ArgumentMode")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("getArgumentMode()")]),t._v(" methods determines the ArgumentMode, which knows to options: "),a("code",[t._v("LIST")]),t._v(" and "),a("code",[t._v("TYPE")]),t._v(".\nIt tells the plugin how arguments should be passed to queries and mutations.")]),t._v(" "),a("h3",{attrs:{id:"type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[t._v("#")]),t._v(" "),a("code",[t._v("TYPE")])]),t._v(" "),a("p",[a("code",[t._v("TYPE")]),t._v(" is the value in the default adapter and causes the plugin to use a "),a("code",[t._v("Input")]),t._v(" or "),a("code",[t._v("Filter")]),t._v(" type:")]),t._v(" "),a("p",[t._v("For "),a("code",[t._v("$persist()")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mutation CreatePost($post: PostInput!) {\n  createPost(post: $post) {\n    ...\n  }\n}\n")])])]),a("p",[t._v("For "),a("code",[t._v("fetch()")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("query Posts($title: String!) {\n  posts(filter: {title: $title}) {\n    ...\n  }\n}\n")])])]),a("h3",{attrs:{id:"list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[t._v("#")]),t._v(" "),a("code",[t._v("LIST")])]),t._v(" "),a("p",[a("code",[t._v("LIST")]),t._v(" causes the plugin to use plain lists:")]),t._v(" "),a("p",[t._v("For "),a("code",[t._v("$persist()")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mutation CreatePost($id: ID!, $authorId: ID!, $title: String!, $content: String!) {\n  createPost(id: $id, authorId: $authorId, title: $title, content: $content) {\n    ...\n  }\n}\n")])])]),a("p",[t._v("For "),a("code",[t._v("fetch()")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("query Posts($title: String!) {\n  posts(title: $title) {\n    ...\n  }\n}\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);